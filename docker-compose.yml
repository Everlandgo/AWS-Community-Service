# E2E 스모크 테스트를 위한 완전한 개발 환경
# MySQL + MinIO + Post Service + Comment Service + React Frontend

# 프로젝트 이름 설정
name: post-project

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: post-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: postdb
      MYSQL_USER: postuser
      MYSQL_PASSWORD: postpass
      MYSQL_MULTIPLE_DATABASES: postdb,commentdb
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - post-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3 호환 객체 저장소)
  minio:
    image: minio/minio:latest
    container_name: post-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - post-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Post 서비스 (Flask 애플리케이션)
  post-service:
    build: ./Post-master
    container_name: post-service
    ports:
      - "8081:5000"
    environment:
      - FLASK_APP=post
      - FLASK_ENV=development
      - DATABASE_URL=mysql+pymysql://postuser:postpass@mysql:3306/postdb
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - COGNITO_REGION=${COGNITO_REGION}
      - COGNITO_CLIENT_ID=${COGNITO_CLIENT_ID}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}


    volumes:
      - ./Post-master:/app
      - ./Post-master/uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - post-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  # Comment 서비스 (Flask 애플리케이션)
  comment-service:
    build: ./Comment-master
    container_name: comment-service
    ports:
      - "8083:8083"
    environment:
      - FLASK_APP=app
      - FLASK_ENV=development
      - DATABASE_URL=mysql+pymysql://postuser:postpass@mysql:3306/commentdb   # ✅ 수정됨
      - COGNITO_USER_POOL_ID=ap-northeast-2_HnquQbxZ4
      - COGNITO_REGION=ap-northeast-2
      - COGNITO_CLIENT_ID=47fnsb2rstr5ssi0lb68r2jeat
      - AWS_ACCESS_KEY_ID=AKIATSDMILGLR2XFXCLH
      - AWS_SECRET_ACCESS_KEY=goMES700zElx2t1R5v7ezNtGcQThoujP
      - AWS_DEFAULT_REGION=ap-northeast-2
    volumes:
      - ./Comment-master:/app
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - post-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  # React 프론트엔드
  frontend:
    build: ./Front
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_COGNITO_USER_POOL_ID=ap-northeast-2_HnquQbxZ4
      - REACT_APP_COGNITO_CLIENT_ID=47fnsb2rstr5ssi0lb68r2jeat
      - REACT_APP_COGNITO_REGION=ap-northeast-2
      - REACT_APP_API_URL=http://localhost:8081/api/v1
      - REACT_APP_COMMENT_SERVICE_URL=http://localhost:8083
      - REACT_APP_MINIO_URL=http://localhost:9000
    volumes:
      - ./Front:/app
      - /app/node_modules
    depends_on:
      post-service:
        condition: service_healthy
      comment-service:
        condition: service_healthy
    networks:
      - post-network
    stdin_open: true
    tty: true

volumes:
  mysql_data:
  minio_data:

networks:
  post-network:
    driver: bridge
