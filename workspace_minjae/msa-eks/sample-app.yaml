apiVersion: v1
kind: Namespace
metadata: { name: svc-demo }
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata: { name: default-deny, namespace: svc-demo }
spec:
  podSelector: {}
  policyTypes: ["Ingress","Egress"]
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: echo, namespace: svc-demo }
spec:
  replicas: 2
  selector: { matchLabels: { app: echo } }
  template:
    metadata: { labels: { app: echo } }
    spec:
      containers:
      - name: echo
        image: ealen/echo-server:latest
        ports: [{ containerPort: 80 }]
---
apiVersion: v1
kind: Service
metadata: { name: echo-svc, namespace: svc-demo }
spec:
  selector: { app: echo }
  ports: [{ port: 80, targetPort: 80 }]
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
  namespace: svc-demo
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - http:
      paths:
      - path: /v1/echo
        pathType: Prefix
        backend:
          service:
            name: echo-svc
            port: { number: 80 }
